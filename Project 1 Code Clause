def display_board(board):
    print(f"{board[0]} | {board[1]} | {board[2]}")
    print("--+---+--")
    print(f"{board[3]} | {board[4]} | {board[5]}")
    print("--+---+--")
    print(f"{board[6]} | {board[7]} | {board[8]}")
    print()

def check_win(board, player):
    win_combinations = [(0, 1, 2), (3, 4, 5), (6, 7, 8), 
                        (0, 3, 6), (1, 4, 7), (2, 5, 8), 
                        (0, 4, 8), (2, 4, 6)]
    return any(board[a] == board[b] == board[c] == player for a, b, c in win_combinations)

def check_draw(board):
    return " " not in board

def ai_move(board):
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            return

def play_game():
    board = [" "] * 9
    while True:
        display_board(board)
        move = int(input("Enter your move (1-9): ")) - 1
        if board[move] == " ":
            board[move] = "X"
        else:
            print("Invalid move, try again.")
            continue
        if check_win(board, "X"):
            display_board(board)
            print("You win!")
            break
        if check_draw(board):
            display_board(board)
            print("It's a draw!")
            break
      
        ai_move(board)
        if check_win(board, "O"):
            display_board(board)
            print("AI wins!")
            break
        if check_draw(board):
            display_board(board)
            print("It's a draw!")
            break
play_game()
